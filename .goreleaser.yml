---
dist: .artifacts/goreleaser
# Visit https://goreleaser.com for documentation on how to customize this
# behavior.
env:
- SLACK_CHANNEL='{{ .Env.SLACK_CHANNEL }}'
- SLACK_WEBHOOK='{{ .Env.SLACK_WEBHOOK }}'
before:
  hooks:
    # this is just an example and not a requirement for provider building/publishing
    - go mod tidy
    - tfplugindocs generate --tf-version 1.2.8 --examples-dir examples # move this to mage later, since it is slow
builds:
  - env:
      # goreleaser does not work with CGO, it could also complicate
      # usage by users in CI/CD systems like Terraform Cloud where
      # they are unable to install libraries.
      - CGO_ENABLED=0
    mod_timestamp: '{{ .CommitTimestamp }}'
    flags:
      - -trimpath
    ldflags:
      - -s -w -X main.version={{.Version}} -X main.commit={{.Commit}}
    goos:
      - freebsd
      - windows
      - linux
      - darwin
    goarch:
      - amd64
      - '386'
      - arm
      - arm64
    ignore:
      - goos: darwin
        goarch: '386'
    binary: '{{ .ProjectName }}_v{{ .Version }}'
archives:
  - format: zip
    name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}'
checksum:
  name_template: '{{ .ProjectName }}_{{ .Version }}_SHA256SUMS'
  algorithm: sha256
signs:
  - artifacts: checksum
    args:
      # if you are using this in a GitHub action or some other automated pipeline, you
      # need to pass the batch flag to indicate its not interactive.
      - --batch
      - --local-user
      - '{{ .Env.GPG_FINGERPRINT }}' # set this environment variable for your signing key
      - --output
      - ${signature}
      - --detach-sign
      - ${artifact}
release:
  # If you want to manually examine the release before its live, uncomment this line:
  draft: false
  replace_existing_draft: true
  skip_upload: false

changelog:
  # Set this to true if you don't want any changelog at all.
  # Warning: this will also ignore any changelog files passed via `--release-notes`,
  # and will render an empty changelog.
  # This may result in an empty release notes on GitHub/GitLab/Gitea.
  skip: false

  # Changelog generation implementation to use.
  #
  # Valid options are:
  # - `git`: uses `git log`;
  # - `github`: uses the compare GitHub API, appending the author login to the changelog.
  # - `gitlab`: uses the compare GitLab API, appending the author name and email to the changelog.
  # - `github-native`: uses the GitHub release notes generation API, disables the groups feature.
  #
  # Defaults to `git`.
  use: github

  # Sorts the changelog by the commit's messages.
  # Could either be asc, desc or empty
  # Default is empty
  sort: asc

  # Max commit hash length to use in the changelog.
  #
  # 0: use whatever the changelog implementation gives you
  # -1: remove the commit hash from the changelog
  # any other number: max length.
  #
  # Default is 0.
  abbrev: -1

  # Group commits messages by given regex and title.
  # Order value defines the order of the groups.
  # Proving no regex means all commits will be grouped under the default group.
  # Groups are disabled when using github-native, as it already groups things by itself.
  #
  # Default is no groups.
  groups:
    - title: Features
      regexp: "^.*feat[(\\w)]*:+.*$"
      order: 0
    - title: 'Bug fixes'
      regexp: "^.*fix[(\\w)]*:+.*$"
      order: 1
    - title: Others
      order: 999

  filters:
    # Commit messages matching the regexp listed here will be removed from
    # the changelog
    # Default is empty
    exclude:
      - '^docs:'
      - typo
      - (?i)foo
announce:
  slack:
    enabled: true
    # The name of the channel that the user selected as a destination for webhook messages.
    channel: '{{ .Env.SLACK_CHANNEL }}'
    message_template:  ':terraform: {{ .ProjectName }} {{ .Tag }} is out! Terraform Registry: https://registry.terraform.io/providers/DelineaXPM/dsv/{{ trimprefix .Tag "v" }} GitHub release: {{ .ReleaseURL }}'
    # Emoji to use as the icon for this message. Overrides icon_url.
    icon_emoji: ':tada:'