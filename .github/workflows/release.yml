# This GitHub action can publish assets for release when a tag is created.
# Currently its setup to run on any tag that matches the pattern "v*" (ie. v0.1.0).
#
# This uses an action (hashicorp/ghaction-import-gpg) that assumes you set your
# private key in the `GPG_PRIVATE_KEY` secret and passphrase in the `PASSPHRASE`
# secret. If you would rather own your own GPG handling, please fork this action
# or use an alternative one for key handling.
#
# You will need to pass the `--batch` flag to `gpg` in your signing step
# in `goreleaser` to indicate this is being used in a non-interactive mode.
#
name: release
on:
  push:
    tags:
      - 'v*'
  workflow_call:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  goreleaser:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      # https://github.com/magnetikonline/action-golang-cache
      - name: Setup Golang with cache
        uses: magnetikonline/action-golang-cache@777394c89f8ed6fcf1649505277c46c1cd06494d # v4
        with:
          go-version-file: go.mod
      - uses: aquaproj/aqua-installer@928a2ee4243a9ee8312d80dc8cbaca88fb602a91 # v2.2.0
        with:
          aqua_version: v2.21.3
          enable_aqua_install: true
          aqua_opts: '--tags release'
        env:
          AQUA_LOG_LEVEL: debug
          AQUA_OPTS: ''
      - name: mage-tidy
        uses: magefile/mage-action@6a5dcb5fe61f43d7c08a98bc3cf9bc63c308c08e # v3
        with:
          version: latest
          args: init

      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@01dd5d3ca463c7f10f7f4f7b4f177225ac661ee4 # v6
        with:
          gpg_private_key: ${{ secrets.TERRAFORM_REGISTRY_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.TERRAFORM_REGISTRY_PASSPHRASE }}
      - name: mage-release
        uses: magefile/mage-action@6a5dcb5fe61f43d7c08a98bc3cf9bc63c308c08e # v3
        with:
          version: latest
          args: release
        env:
          # GitHub sets this automatically
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_CHANNEL: ${{ secrets.DSV_SLACK_CHANNEL }}
          SLACK_WEBHOOK: ${{ secrets.DSV_SLACK_WEBHOOK }}
          DOCKER_ORG: ${{ secrets.DSV_DOCKER_REGISTRY }}
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
